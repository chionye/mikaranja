{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/valentine/Projects/web/mikaranja/services/api/api-routes.ts"],"sourcesContent":["/** @format */\n\nexport default class ApiRoutes {\n  static BASE_URL_DEV: string = \"https://dummyjson.com\";\n\n  // Api route to login\n  static Login: string = \"/auth/login\";\n\n  // Api route to fetch todo list\n  static FetchTodo: (limit: number, skip: number) => string = (\n    limit: number,\n    skip: number\n  ) => `/todos?limit=${limit}&skip=${skip}`;\n\n  // Api route to fetch todo by id\n  static FetchTodoByUserID: (id: string) => string = (id: string) =>\n    `/todos/user/${id}`;\n\n  // Api route to create a new todo item\n  static CreateTodo: string = \"/todos/add\";\n\n  // Api route to update or delete todo by ID\n  static UpdateTodo: (id: number) => string = (id: number) => `/todos/${id}`;\n}\n"],"names":[],"mappings":"AAAA,YAAY;;;;;AAEG,MAAM;AAqBrB;AApBE,yKADmB,WACZ,gBAAuB;AAE9B,qBAAqB;AACrB,yKAJmB,WAIZ,SAAgB;AAEvB,+BAA+B;AAC/B,yKAPmB,WAOZ,aAAqD,CAC1D,OACA,OACG,AAAC,gBAA6B,OAAd,OAAM,UAAa,OAAL;AAEnC,gCAAgC;AAChC,yKAbmB,WAaZ,qBAA4C,CAAC,KAClD,AAAC,eAAiB,OAAH;AAEjB,sCAAsC;AACtC,yKAjBmB,WAiBZ,cAAqB;AAE5B,2CAA2C;AAC3C,yKApBmB,WAoBZ,cAAqC,CAAC,KAAe,AAAC,UAAY,OAAH","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///Users/valentine/Projects/web/mikaranja/services/api/api-clients.ts"],"sourcesContent":["/** @format */\n\nimport axios, {\n  AxiosInstance,\n  AxiosRequestConfig,\n  AxiosError,\n} from \"axios\";\nimport ApiRoutes from \"./api-routes\";\nimport { MakeRequestFunction } from \"@/types\";\n\nexport const BaseURL = ApiRoutes.BASE_URL_DEV;\n\n// Create a single Axios instance\nexport const API: AxiosInstance = axios.create({\n  baseURL: BaseURL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  timeout: 10000,\n});\n\nlet authToken: string | null = null;\n\n// Function to set the token globally for the API instance\nexport const setAuthToken = (token: string | null) => {\n  authToken = token;\n};\n\n// Request Interceptor: Attach token to every request\nAPI.interceptors.request.use(\n  async (config) => {\n    // Check if authToken is already set in memory\n    if (!authToken) {\n      // If not, try to load it from localStorage\n      const storedToken = localStorage.getItem(\"userToken\");\n      if (storedToken) {\n        authToken = storedToken; // Update in-memory token\n      }\n    }\n\n    // Attach the token if available and if it's not a login request\n    if (authToken && !config.url?.endsWith(ApiRoutes.Login)) {\n      config.headers.Authorization = `Bearer ${authToken}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response Interceptor\nAPI.interceptors.response.use(\n  (response) => response,\n  async (error: AxiosError) => {\n    if (error.response?.status === 401 || error.response?.status === 403) {\n      console.warn(\n        \"Unauthorized access. Clearing token and redirecting to login.\"\n      );\n      // Ensure localStorage access is client-side\n      if (typeof window !== \"undefined\") {\n        localStorage.removeItem(\"userToken\");\n        localStorage.removeItem(\"userInfo\");\n      }\n      setAuthToken(null);\n      setAuthToken(null);\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Helper function to build headers (still useful for specific overrides)\nfunction buildHeaders(\n  payloadData?: any,\n  tokenOrHeaders?: string | Record<string, string>\n): Record<string, string> {\n  const customHeaders: Record<string, string> = {};\n\n  if (typeof tokenOrHeaders === \"string\") {\n    customHeaders[\"Authorization\"] = `Bearer ${tokenOrHeaders}`;\n  } else if (typeof tokenOrHeaders === \"object\") {\n    Object.assign(customHeaders, tokenOrHeaders);\n  }\n\n  const isFormData = payloadData instanceof FormData;\n  if (isFormData) {\n    if (customHeaders[\"Content-Type\"]) {\n      delete customHeaders[\"Content-Type\"];\n    }\n  }\n  return customHeaders;\n}\n\n// GET Request\nexport function getRequest<R = any>(): MakeRequestFunction<never, R> {\n  return async (url, options) => {\n    try {\n      const config: AxiosRequestConfig = {\n        headers: buildHeaders(undefined, options?.tokenOrHeaders),\n      };\n      const response = await API.get<R>(url, config);\n      return response;\n    } catch (error: any) {\n      console.error(\"GET Request Error:\", error);\n      throw error.response?.data || error;\n    }\n  };\n}\n\n// POST Request\nexport function postRequest<D = any, R = any>(): MakeRequestFunction<D, R> {\n  return async (url, options) => {\n    try {\n      const config: AxiosRequestConfig = {\n        headers: buildHeaders(options?.data, options?.tokenOrHeaders),\n      };\n      const response = await API.post<R>(url, options?.data, config);\n      return response;\n    } catch (error: any) {\n      console.error(\"POST Request Error:\", error);\n      throw error.response?.data || error;\n    }\n  };\n}\n\n// PATCH Request\nexport function patchRequest<D = any, R = any>(): MakeRequestFunction<D, R> {\n  return async (url, options) => {\n    try {\n      const config: AxiosRequestConfig = {\n        headers: buildHeaders(options?.data, options?.tokenOrHeaders),\n      };\n      const response = await API.patch<R>(url, options?.data, config);\n      return response;\n    } catch (error: any) {\n      console.error(\"PATCH Request Error:\", error);\n      throw error.response?.data || error;\n    }\n  };\n}\n\n// PUT Request\nexport function putRequest<D = any, R = any>(): MakeRequestFunction<D, R> {\n  return async (url, options) => {\n    try {\n      const config: AxiosRequestConfig = {\n        headers: buildHeaders(options?.data, options?.tokenOrHeaders),\n      };\n      const response = await API.put<R>(url, options?.data, config);\n      return response;\n    } catch (error: any) {\n      console.error(\"PUT Request Error:\", error);\n      throw error.response?.data || error;\n    }\n  };\n}\n\n// DELETE Request\nexport function deleteRequest<R = any>(): MakeRequestFunction<never, R> {\n  return async (url, options) => {\n    try {\n      const config: AxiosRequestConfig = {\n        headers: buildHeaders(undefined, options?.tokenOrHeaders),\n      };\n      const response = await API.delete<R>(url, {\n        ...config,\n      });\n      return response;\n    } catch (error: any) {\n      console.error(\"DELETE Request Error:\", error);\n      throw error.response?.data || error;\n    }\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///Users/valentine/Projects/web/mikaranja/services/api/index.ts"],"sourcesContent":["/** @format */\n\nimport { RequestsType } from \"@/types\";\nimport {\n  postRequest,\n  getRequest,\n  patchRequest,\n  deleteRequest,\n} from \"./api-clients\";\n\n// Instantiate the request functions\nconst getTodo = getRequest();\nconst postTodo = postRequest();\nconst patchTodo = patchRequest();\nconst deleteTodo = deleteRequest();\n\nexport const Requests: RequestsType = {\n  getTodo,\n  postTodo,\n  patchTodo,\n  deleteTodo,\n};\n"],"names":[],"mappings":"AAAA,YAAY;;;AAGZ;;AAOA,oCAAoC;AACpC,MAAM,UAAU,CAAA,GAAA,oIAAA,CAAA,aAAU,AAAD;AACzB,MAAM,WAAW,CAAA,GAAA,oIAAA,CAAA,cAAW,AAAD;AAC3B,MAAM,YAAY,CAAA,GAAA,oIAAA,CAAA,eAAY,AAAD;AAC7B,MAAM,aAAa,CAAA,GAAA,oIAAA,CAAA,gBAAa,AAAD;AAExB,MAAM,WAAyB;IACpC;IACA;IACA;IACA;AACF","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///Users/valentine/Projects/web/mikaranja/contexts/AuthContext.tsx"],"sourcesContent":["/** @format */\n\n\"use client\";\n\nimport React, {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  ReactNode,\n} from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport ApiRoutes from \"@/services/api/api-routes\"; \nimport { AuthContextType, LoginResult, UserInfo } from \"@/types\";\nimport { setAuthToken } from \"@/services/api/api-clients\";\nimport { Requests } from \"@/services/api\";\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<UserInfo | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const router = useRouter();\n  // Initialize auth state from localStorage on app start\n  useEffect(() => {\n    const loadAuthState = () => {\n      // Only access localStorage in the browser environment\n      if (typeof window !== \"undefined\") {\n        try {\n          const storedUser = localStorage.getItem(\"userInfo\");\n          const storedToken = localStorage.getItem(\"userToken\");\n\n          if (storedUser && storedToken) {\n            const parsedUser: UserInfo = JSON.parse(storedUser);\n            setUser(parsedUser);\n            setAuthToken(storedToken); // Set token in Axios interceptor\n          }\n        } catch (error) {\n          console.error(\"Failed to load auth state from storage:\", error);\n        } finally {\n          setIsLoading(false);\n        }\n      } else {\n        setIsLoading(false);\n      }\n    };\n\n    loadAuthState();\n  }, []);\n\n  const login = async (\n    username: string,\n    password: string\n  ): Promise<LoginResult> => {\n    setIsLoading(true);\n    try {\n      const response = await Requests.postTodo(ApiRoutes.Login, {\n        data: { username, password },\n      });\n\n      const data: UserInfo = response.data;\n\n      console.log(data);\n\n      if (response.status === 200 && data.accessToken) {\n        const token = data.accessToken;\n        // Store user info and token, only in browser\n        if (typeof window !== \"undefined\") {\n          localStorage.setItem(\"userInfo\", JSON.stringify(data));\n          localStorage.setItem(\"userToken\", token);\n        }\n\n        setUser(data);\n        setAuthToken(token);\n        return { success: true, error: null };\n      } else {\n        return { success: false, error: \"Unexpected API response.\" };\n      }\n    } catch (error: any) {\n     const errorMessage = error?.response?.data?.message ||   error?.message || \"Invalid credentials. Please try again.\";\n      console.error(\"Login error:\", error);\n      return { success: false, error: errorMessage };\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    setIsLoading(true);\n    try {\n      if (typeof window !== \"undefined\") {\n        localStorage.removeItem(\"userInfo\");\n        localStorage.removeItem(\"userToken\");\n      }\n      setUser(null);\n      setAuthToken(null);\n      router.push(\"/\");\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const value = { user, isLoading, login, logout };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\n// Custom hook to use the AuthContext\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n"],"names":[],"mappings":"AAAA,YAAY;;;;;AAIZ;AAOA;AACA;AAEA;AACA;;;AAbA;;;;;;AAeA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAe;QAAC,EAAE,QAAQ,EAA2B;;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB;IAClD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IACpD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,uDAAuD;IACvD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM;wDAAgB;oBACpB,sDAAsD;oBACtD,wCAAmC;wBACjC,IAAI;4BACF,MAAM,aAAa,aAAa,OAAO,CAAC;4BACxC,MAAM,cAAc,aAAa,OAAO,CAAC;4BAEzC,IAAI,cAAc,aAAa;gCAC7B,MAAM,aAAuB,KAAK,KAAK,CAAC;gCACxC,QAAQ;gCACR,CAAA,GAAA,oIAAA,CAAA,eAAY,AAAD,EAAE,cAAc,iCAAiC;4BAC9D;wBACF,EAAE,OAAO,OAAO;4BACd,QAAQ,KAAK,CAAC,2CAA2C;wBAC3D,SAAU;4BACR,aAAa;wBACf;oBACF;;gBAGF;;YAEA;QACF;iCAAG,EAAE;IAEL,MAAM,QAAQ,OACZ,UACA;QAEA,aAAa;QACb,IAAI;YACF,MAAM,WAAW,MAAM,2HAAA,CAAA,WAAQ,CAAC,QAAQ,CAAC,mIAAA,CAAA,UAAS,CAAC,KAAK,EAAE;gBACxD,MAAM;oBAAE;oBAAU;gBAAS;YAC7B;YAEA,MAAM,OAAiB,SAAS,IAAI;YAEpC,QAAQ,GAAG,CAAC;YAEZ,IAAI,SAAS,MAAM,KAAK,OAAO,KAAK,WAAW,EAAE;gBAC/C,MAAM,QAAQ,KAAK,WAAW;gBAC9B,6CAA6C;gBAC7C,wCAAmC;oBACjC,aAAa,OAAO,CAAC,YAAY,KAAK,SAAS,CAAC;oBAChD,aAAa,OAAO,CAAC,aAAa;gBACpC;gBAEA,QAAQ;gBACR,CAAA,GAAA,oIAAA,CAAA,eAAY,AAAD,EAAE;gBACb,OAAO;oBAAE,SAAS;oBAAM,OAAO;gBAAK;YACtC,OAAO;gBACL,OAAO;oBAAE,SAAS;oBAAO,OAAO;gBAA2B;YAC7D;QACF,EAAE,OAAO,OAAY;gBACC,sBAAA;YAArB,MAAM,eAAe,CAAA,kBAAA,6BAAA,kBAAA,MAAO,QAAQ,cAAf,uCAAA,uBAAA,gBAAiB,IAAI,cAArB,2CAAA,qBAAuB,OAAO,MAAM,kBAAA,4BAAA,MAAO,OAAO,KAAI;YAC1E,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAAa;QAC/C,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,SAAS;QACb,aAAa;QACb,IAAI;YACF,wCAAmC;gBACjC,aAAa,UAAU,CAAC;gBACxB,aAAa,UAAU,CAAC;YAC1B;YACA,QAAQ;YACR,CAAA,GAAA,oIAAA,CAAA,eAAY,AAAD,EAAE;YACb,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;QACjC,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,QAAQ;QAAE;QAAM;QAAW;QAAO;IAAO;IAE/C,qBAAO,6LAAC,YAAY,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAC9C;GAxFa;;QAGI,qIAAA,CAAA,YAAS;;;KAHb;AA2FN,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANa","debugId":null}}]
}